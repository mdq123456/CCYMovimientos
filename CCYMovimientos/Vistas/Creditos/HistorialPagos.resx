<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <metadata name="Chk.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="btnReImprimir.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BdFGtYxooVIvAAAAAElFTkSuQmCC
</value>
  </data>
</root>